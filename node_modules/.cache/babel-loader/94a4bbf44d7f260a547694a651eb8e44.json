{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY\\\\Desktop\\\\Complete Website\\\\React\\\\myapp\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let time = new Date().toLocaleTimeString();\n  const state = useState();\n  const [ctime, setCtime] = useState(time);\n\n  const UpdateTime = () => {\n    // new Date().toLocaleTimeString();\n    setCtime(time);\n  };\n\n  setInterval(UpdateTime, 1000);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: ctime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"FA7hmWM/JyWYUsGvF9DnuQkAeb8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/MY/Desktop/Complete Website/React/myapp/src/App.jsx"],"names":["React","useState","App","time","Date","toLocaleTimeString","state","ctime","setCtime","UpdateTime","setInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,MAAIC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAX;AAEA,QAAMC,KAAK,GAAGL,QAAQ,EAAtB;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACE,IAAD,CAAlC;;AAEA,QAAMM,UAAU,GAAG,MAAM;AACrB;AACAD,IAAAA,QAAQ,CAACL,IAAD,CAAR;AACH,GAHD;;AAKAO,EAAAA,WAAW,CAACD,UAAD,EAAa,IAAb,CAAX;AACA,sBAEI;AAAA,2BACI;AAAA,gBACKF;AADL;AAAA;AAAA;AAAA;AAAA;AADJ,mBAFJ;AAUH,CAxBD;;GAAML,G;;KAAAA,G;AA0BN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst App = () => {\r\n\r\n    let time = new Date().toLocaleTimeString()\r\n\r\n    const state = useState();\r\n\r\n    const [ctime, setCtime] = useState(time);\r\n\r\n    const UpdateTime = () => {\r\n        // new Date().toLocaleTimeString();\r\n        setCtime(time);\r\n    }\r\n\r\n    setInterval(UpdateTime, 1000);\r\n    return (\r\n\r\n        <>\r\n            <h1>\r\n                {ctime}\r\n            </h1>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}